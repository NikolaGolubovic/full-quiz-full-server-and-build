{"version":3,"sources":["components/Header.js","components/Notification.js","reducers/notificationReducer.js","components/Homepage.js","components/Spinner.js","services/userServices.js","components/Score.js","components/Quiz.js","components/SelectQuiz.js","components/Login.js","components/Register.js","App.js","store.js","index.js"],"names":["Navbar","user","className","href","onClick","window","localStorage","clear","location","reload","Notification","dispatch","useDispatch","notifications","useSelector","state","console","log","info","map","setTimeout","type","id","key","content","errors","error","initialState","createInfo","createError","getId","Math","floor","random","notificationReducer","action","concat","filter","notification","Homepage","Spinner","class","token","setToken","newToken","register","newObj","a","axios","post","response","data","login","loginObj","sendScore","score","scoreObj","config","headers","Authorization","put","Score","confirmResult","userService","Fragment","Quiz","mout","nums","quizCreated","useState","questionsArr","updateQuestionsArr","loading","updateLoading","position","updatePosition","updateScore","timer","updateTimer","quizEnd","updateQuizEnd","half","updateHalf","triple","updateTriple","useEffect","addresses","addressArr","fetchAddresses","arr","length","fetch","res","json","addr","push","results","i","category","finalQuestions","randomNums","randomItems","randomSolutions","Set","j","num","randomArr","reduce","acc","cur","solutions","forEach","question","index","correct_answer","solution","answer","incorrect_answers","incQuestion","incIndex","_","makeFinalArr","time","justNext","clearTimeout","slice","rArr","wrongSolution","iWrong","item","halfChance","disabled","ReactHtmlParser","el","obj","level","points","timeBonus","nextQuestion","SelectQuiz","history","useHistory","helperObj","helperArr","categoriesArr","History","Geography","Film","objWithMovieCodes","objItem","arrItem","categoryNums","updateCategoryNums","objActive","updateActive","updateQuizCreated","splice","activeClass","numOfSelected","temp","buttonText","Login","username","setUsername","password","setPassword","signIn","setSignIn","e","preventDefault","JSON","stringify","setItem","Array","isArray","singleError","message","onSubmit","value","onChange","target","Register","confirmPassword","setConfirmPassword","errorMsg","setErrorMsg","registerUser","notificationStyle","display","border","borderWidth","borderColor","padding","margin","style","App","setUser","loggedUser","getItem","objWithToken","parse","exact","path","component","store","createStore","notificatioReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.59968e6d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Navbar({ user }) {\r\n  const logOut = () => {\r\n    window.localStorage.clear();\r\n    window.location.reload();\r\n  };\r\n  return (\r\n    <header className=\"nav\">\r\n      <a href=\"/quiz\">Play Quiz</a>\r\n      {user ? (\r\n        <div className=\"user-control\">\r\n          <h4>{user}</h4>\r\n          <div className=\"log-out\" onClick={logOut}>\r\n            Log Out\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <a href=\"/register\">Sign Up</a>\r\n          <a href=\"/login\">Sign In</a>\r\n        </>\r\n      )}\r\n    </header>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nfunction Notification() {\r\n  const dispatch = useDispatch();\r\n  const notifications = useSelector((state) => state);\r\n  console.log(notifications);\r\n  return (\r\n    <div>\r\n      {notifications.info &&\r\n        notifications.info.map((info) => {\r\n          setTimeout(\r\n            () => dispatch({ type: \"REMOVE_NOTI\", id: info.id }),\r\n            4000\r\n          );\r\n          return (\r\n            <div className=\"info-notification\" key={info.id}>\r\n              <p>{info.content}</p>\r\n              <button\r\n                onClick={() => dispatch({ type: \"REMOVE_NOTI\", id: info.id })}\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          );\r\n        })}\r\n      {notifications.errors &&\r\n        notifications.errors.map((error) => {\r\n          setTimeout(\r\n            () => dispatch({ type: \"REMOVE_ERROR\", id: error.id }),\r\n            4000\r\n          );\r\n          return (\r\n            <div className=\"error-notification\" key={error.id}>\r\n              <p>{error.content}</p>\r\n              <button\r\n                onClick={() => dispatch({ type: \"REMOVE_ERROR\", id: error.id })}\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notification;\r\n","const initialState = {\r\n  info: [],\r\n  errors: [],\r\n};\r\n\r\nexport const createInfo = (info) => {\r\n  return {\r\n    type: \"ADD_INFO\",\r\n    info,\r\n  };\r\n};\r\n\r\nexport const createError = (error) => {\r\n  return {\r\n    type: \"ADD_ERROR\",\r\n    error,\r\n  };\r\n};\r\n\r\nconst getId = () => Math.floor(Math.random() * 100000);\r\n\r\nconst notificationReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_INFO\":\r\n      return {\r\n        ...state,\r\n        info: state.info.concat({\r\n          content: action.info,\r\n          id: `info-${getId()}`,\r\n        }),\r\n      };\r\n    case \"ADD_ERROR\":\r\n      console.log(action);\r\n      return {\r\n        ...state,\r\n        errors: state.errors.concat({\r\n          content: action.error,\r\n          id: `error-${getId()}`,\r\n        }),\r\n      };\r\n    case \"REMOVE_NOTI\":\r\n      return {\r\n        ...state,\r\n        info: state.info.filter(\r\n          (notification) => notification.id !== action.id\r\n        ),\r\n      };\r\n    case \"REMOVE_ERROR\":\r\n      return {\r\n        ...state,\r\n        errors: state.errors.filter(\r\n          (notification) => notification.id !== action.id\r\n        ),\r\n      };\r\n    case \"RESET_NOTIFICATIONS\":\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default notificationReducer;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createInfo } from \"../reducers/notificationReducer\";\r\n\r\nfunction Homepage() {\r\n  const dispatch = useDispatch();\r\n\r\n  const testRedux = () => {\r\n    dispatch(createInfo(\"This is your info \"));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={testRedux}>Test Redux</button>\r\n      <a href=\"/quiz\">Play Quiz</a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","import React from \"react\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div class=\"loader-container\">\r\n      <div className=\"loader\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = \"/api/users\";\r\n\r\nlet token = null;\r\n\r\nconst setToken = (newToken) => {\r\n  token = `bearer ${newToken}`;\r\n};\r\n\r\nconst register = async (newObj) => {\r\n  try {\r\n    const response = await axios.post(baseUrl, newObj);\r\n    return response.data;\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n\r\nconst login = async (loginObj) => {\r\n  const response = await axios.post(\"/api/login\", loginObj);\r\n  return response.data;\r\n};\r\n\r\nconst sendScore = async (score) => {\r\n  const scoreObj = { score };\r\n  const config = { headers: { Authorization: token } };\r\n  const response = await axios.put(\"/api/users/score\", scoreObj, config);\r\n  return response.data;\r\n};\r\n\r\nexport default {\r\n  setToken,\r\n  register,\r\n  login,\r\n  sendScore,\r\n};\r\n","import React from \"react\";\r\nimport userService from \"../services/userServices\";\r\n\r\nfunction Score({ score, user }) {\r\n  const confirmResult = async () => {\r\n    const res = await userService.sendScore(score);\r\n    console.log(user);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <h2>You made: {score} </h2>\r\n      {user && <button onClick={confirmResult}>Confirm Your result</button>}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Score;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport Spinner from \"./Spinner\";\r\nimport Score from \"./Score\";\r\n\r\nfunction Quiz({ nums, quizCreated, user }) {\r\n  const [questionsArr, updateQuestionsArr] = useState([]);\r\n  const [loading, updateLoading] = useState(true);\r\n  const [position, updatePosition] = useState(0); // index for questionsArr\r\n  const [score, updateScore] = useState(0);\r\n  const [timer, updateTimer] = useState(12);\r\n  const [quizEnd, updateQuizEnd] = useState(false);\r\n  const [half, updateHalf] = useState(false);\r\n  const [triple, updateTriple] = useState(0);\r\n  useEffect(() => {\r\n    let addresses = [];\r\n    let addressArr = [];\r\n    // napraviti adrese od arraya iz propsa\r\n    function makeAddresses(arr) {\r\n      addresses = arr.map(\r\n        (category) =>\r\n          `https://opentdb.com/api.php?amount=10&category=${category}&type=multiple`\r\n      );\r\n    }\r\n    makeAddresses(nums);\r\n    // napraviti promise iz addresses arraya\r\n    async function fetchAddresses(arr) {\r\n      if (arr.length < 1) {\r\n        let res = await fetch(\r\n          \"https://opentdb.com/api.php?amount=10&type=multiple\"\r\n        );\r\n        let addr = await res.json();\r\n        addressArr.push(addr.results);\r\n      } else if (arr.length === 1) {\r\n        let res = await fetch(\r\n          `https://opentdb.com/api.php?amount=10&category=${nums[0]}&type=multiple`\r\n        );\r\n        let addr = await res.json();\r\n        addressArr.push(addr.results);\r\n      } else if (arr.length > 1) {\r\n        for (let i = 0; i < arr.length; i++) {\r\n          let res = await fetch(arr[i]);\r\n          let addr = await res.json();\r\n          addressArr.push(addr.results);\r\n        }\r\n      }\r\n    }\r\n\r\n    // choose ten questions\r\n    let finalQuestions = [];\r\n    async function makeFinalArr() {\r\n      await fetchAddresses(addresses);\r\n      if (addressArr.length === 10) {\r\n        updateQuestionsArr(addressArr);\r\n        return;\r\n      }\r\n      let randomArr = [];\r\n      function randomNums(num) {\r\n        while (randomArr.length < 10) {\r\n          randomArr.push(Math.floor(Math.random() * num));\r\n          randomArr = [...new Set(randomArr)];\r\n        }\r\n      }\r\n      addressArr = addressArr.reduce((acc, cur) => acc.concat(cur));\r\n      randomNums(addressArr.length);\r\n      for (let i = 0; i < randomArr.length; i++) {\r\n        finalQuestions.push(addressArr[randomArr[i]]);\r\n      }\r\n      let solutions = []; // ici ce opcije sa prvom elementom kao tacnim odgovorom\r\n      finalQuestions.forEach((question, index) => {\r\n        solutions[index] = [];\r\n        if (question.correct_answer) {\r\n          solutions[index].push({\r\n            solution: question[\"correct_answer\"],\r\n            answer: true,\r\n          });\r\n          delete question.correct_answer;\r\n        }\r\n        if (question.incorrect_answers) {\r\n          question.incorrect_answers.map((incQuestion, incIndex) => {\r\n            return solutions[index].push({\r\n              solution: incQuestion,\r\n              answer: false,\r\n            });\r\n          });\r\n          delete question.incorrect_answers;\r\n        }\r\n      });\r\n      function randomItems(arr) {\r\n        // parametar arr sa tacnim odgovor elementom na uvek istom mestu\r\n        let randomSolutions = [];\r\n        for (var i = 0; i < arr.length; i++) {\r\n          let random = [];\r\n          while (random.length < 4) {\r\n            random.push(Math.floor(Math.random() * 4));\r\n            random = [...new Set(random)];\r\n          }\r\n\r\n          randomSolutions[i] = [];\r\n          for (var j = 0; j < 4; j++) {\r\n            randomSolutions[i][random[j]] = arr[i][j];\r\n          }\r\n        }\r\n        return randomSolutions; // arr sa random elementima\r\n      }\r\n      solutions = randomItems(solutions);\r\n\r\n      finalQuestions.forEach(\r\n        (_, index) => (finalQuestions[index][\"solutions\"] = solutions[index])\r\n      );\r\n      await updateQuestionsArr(finalQuestions);\r\n      updateLoading(false);\r\n    }\r\n    if (quizCreated) {\r\n      makeFinalArr();\r\n    }\r\n  }, [quizCreated, nums]);\r\n  // use real dependec, FIX FOR ERROR\r\n  // However, we only truly needed count to transform it into count + 1 and “send it back” to React.\r\n  // But React already knows the current count. All we needed to tell React is to increment the state — whatever it is right now.\r\n  // https://overreacted.io/a-complete-guide-to-useeffect/?fbclid=IwAR2J2V2v0IurIHL25lxmX0Prg7OicvGWe74mhlcL4P0fBs1cLha6ETY_cJ0\r\n  let mout; // set timeout variable\r\n  const time = () => {\r\n    if (timer === 0) {\r\n      updateTimer(12);\r\n      if (position === 9) {\r\n        updateQuizEnd(true);\r\n        return;\r\n      }\r\n      updatePosition(position + 1);\r\n      updateHalf(false);\r\n      return;\r\n    } else {\r\n      mout = setTimeout(() => {\r\n        updateTimer(timer - 1);\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  function nextQuestion(obj, level) {\r\n    let points = 1;\r\n    let timeBonus = 1;\r\n    if (obj[\"answer\"]) {\r\n      if (level === \"hard\") {\r\n        points = 5;\r\n      } else if (level === \"medium\") {\r\n        points = 3;\r\n      }\r\n      if (timer > 8) {\r\n        timeBonus = 5;\r\n      } else if (timer >= 4 && timer <= 8) {\r\n        timeBonus = 3;\r\n      }\r\n      updateScore(score + points + timeBonus);\r\n    } else {\r\n      points = score + -3 >= 0 ? score - 3 : 0;\r\n      updateScore(points);\r\n    }\r\n    clearTimeout(mout);\r\n    if (position + 1 === 10) {\r\n      updateQuizEnd(true);\r\n      return;\r\n    }\r\n    updatePosition(position + 1);\r\n    updateHalf(false);\r\n    updateTimer(12);\r\n  }\r\n\r\n  function halfChance(arr) {\r\n    let rArr = [];\r\n    let wrongSolution = [];\r\n    let iWrong = 0;\r\n    while (rArr.length < 2) {\r\n      rArr.push(Math.floor(Math.random() * 3));\r\n      rArr = [...new Set(rArr)];\r\n    }\r\n    arr.forEach((item) => {\r\n      if (!item.answer) {\r\n        item.half = true;\r\n        wrongSolution.push(item);\r\n      }\r\n    });\r\n    for (var i = 0; i <= 2; i++) {\r\n      if (i !== rArr[0] && i !== rArr[1]) {\r\n        iWrong = i;\r\n        break;\r\n      }\r\n    }\r\n    wrongSolution[iWrong].half = false;\r\n    clearTimeout(mout);\r\n    updateHalf(true);\r\n    updateTriple(triple + 1);\r\n  }\r\n\r\n  function justNext() {\r\n    if (position + 1 === 10) {\r\n      updateQuizEnd(true);\r\n      return;\r\n    }\r\n    clearTimeout(mout);\r\n    updatePosition(position + 1);\r\n    updateHalf(false);\r\n    updateTimer(12);\r\n  }\r\n\r\n  if (loading) return <Spinner />;\r\n  return (\r\n    <div className=\"quiz-main-container\">\r\n      <div className={!quizEnd ? \"\" : \"blank\"}>\r\n        {questionsArr.map((question, index) => {\r\n          if (position === index) {\r\n            return (\r\n              <ul className=\"quiz-container\" key={question.question.slice(10)}>\r\n                <li className=\"score\" key={index} onClick={time()}>\r\n                  <small>Time:</small> {timer} <small>Points:</small> {score}{\" \"}\r\n                  <small>Question Number:</small> {index + 1}\r\n                </li>\r\n                <button\r\n                  className={!half ? \"fifty-fifty\" : \"fifty-used\"}\r\n                  onClick={() => halfChance(question.solutions)}\r\n                  disabled={half || triple >= 3}\r\n                >\r\n                  50:50\r\n                </button>\r\n                <li className=\"question-title\" key={question.category + index}>\r\n                  {ReactHtmlParser(question.question)}\r\n                </li>\r\n                {question.solutions.map((el) => {\r\n                  return (\r\n                    <button\r\n                      className=\"solution\"\r\n                      key={el.solution}\r\n                      onClick={() => nextQuestion(el, question[\"difficulty\"])}\r\n                      disabled={el.half}\r\n                    >\r\n                      <span className={el.half ? \"half\" : \"\"}>\r\n                        {ReactHtmlParser(el.solution)}\r\n                      </span>\r\n                    </button>\r\n                  );\r\n                })}\r\n                <button className=\"next-q\" onClick={justNext}>\r\n                  Next Question\r\n                </button>\r\n              </ul>\r\n            );\r\n          }\r\n        })}\r\n      </div>\r\n      <div className={quizEnd ? \"score\" : \"blank\"}>\r\n        <Score score={score} user={user} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quiz;\r\n","import React, { useState } from \"react\";\r\nimport Quiz from \"./Quiz\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction SelectQuiz({ user }) {\r\n  const history = useHistory();\r\n  let helperObj = {}; // to work with objActive\r\n  let helperArr = []; // for pushin category Nums\r\n  const categoriesArr = [\r\n    { \"General Knowledge\": 9 },\r\n    { History: 23 },\r\n    { Geography: 22 },\r\n    { Film: 11 },\r\n    { \"Science & Nature\": 17 },\r\n  ];\r\n  let objWithMovieCodes = {};\r\n  categoriesArr.forEach((objItem) => {\r\n    for (let key in objItem) {\r\n      objWithMovieCodes[key] = objItem[key];\r\n    }\r\n  });\r\n  categoriesArr.forEach((arrItem, index) => {\r\n    for (let key in arrItem) {\r\n      helperObj[key] = false;\r\n    }\r\n  });\r\n  const [categoryNums, updateCategoryNums] = useState([]);\r\n  const [objActive, updateActive] = useState(helperObj);\r\n  const [quizCreated, updateQuizCreated] = useState(false);\r\n\r\n  function activeClass(key) {\r\n    helperObj = objActive;\r\n    if (helperObj[key]) {\r\n      helperObj[key] = false;\r\n      updateActive(helperObj);\r\n    } else {\r\n      helperObj[key] = true;\r\n      updateActive(helperObj);\r\n    }\r\n    helperArr = categoryNums;\r\n    for (var i = 0; i < helperArr.length; i++) {\r\n      if (helperArr[i] === objWithMovieCodes[key]) {\r\n        helperArr.splice(i, 1);\r\n        updateCategoryNums(helperArr);\r\n        history.push(\"/quiz\");\r\n        return;\r\n      }\r\n    }\r\n    helperArr.push(objWithMovieCodes[key]);\r\n    updateCategoryNums(helperArr);\r\n    history.push(\"/quiz\");\r\n  }\r\n  function buttonText(obj) {\r\n    // obj param is objActive\r\n    let numOfSelected = 0;\r\n    let temp = \"\";\r\n    for (let key in obj) {\r\n      if (obj[key]) {\r\n        numOfSelected += 1;\r\n      }\r\n      if (numOfSelected === 1 && obj[key]) {\r\n        // mora obj[key] inace ce da saltuje sve objekte otkad detektuje numOfSelected\r\n        temp = key;\r\n      }\r\n    }\r\n    return numOfSelected === 1\r\n      ? `Create ${temp}'s Quiz`\r\n      : numOfSelected > 1\r\n      ? \"Create Quiz with choosen areas\"\r\n      : \"Create highly random Quiz\";\r\n  }\r\n\r\n  function createQuiz() {\r\n    updateQuizCreated(true);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={!quizCreated ? \"selection\" : \"blank\"}>\r\n        <h3>Choose your Categories</h3>\r\n        <ul className=\"categories\">\r\n          {categoriesArr.map((category) => {\r\n            for (let key in category) {\r\n              return (\r\n                <li\r\n                  key={category[key]}\r\n                  className={\r\n                    objActive && objActive[key] ? \"category active\" : \"category\"\r\n                  }\r\n                  onClick={() => activeClass(key)}\r\n                >\r\n                  {key}\r\n                </li>\r\n              );\r\n            }\r\n          })}\r\n        </ul>\r\n        <button className=\"btn-create-quiz\" onClick={createQuiz}>\r\n          {buttonText(objActive)}\r\n        </button>\r\n      </div>\r\n\r\n      <div className={quizCreated ? \"quiz\" : \"blank\"}>\r\n        <Quiz nums={categoryNums} quizCreated={quizCreated} user={user} />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default SelectQuiz;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport userService from \"../services/userServices\";\r\nimport { createInfo, createError } from \"../reducers/notificationReducer\";\r\n\r\nfunction Login({ user }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (user) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [user, history]);\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [signIn, setSignIn] = useState(false);\r\n\r\n  async function loginUser(e) {\r\n    e.preventDefault();\r\n    const errors = [];\r\n    try {\r\n      if (!username) {\r\n        errors.push(\"Username is missing\");\r\n      }\r\n      if (!password) {\r\n        errors.push(\"Password is missing\");\r\n      }\r\n      if (errors.length !== 0) {\r\n        throw errors;\r\n      }\r\n      const response = await userService.login({ username, password });\r\n      const token = JSON.stringify(response);\r\n      window.localStorage.setItem(\"loggedUser\", token);\r\n      dispatch(createInfo(\"You are successfully Sign In\"));\r\n      setTimeout(() => window.location.reload(), 1500);\r\n      setSignIn(true);\r\n    } catch (err) {\r\n      if (Array.isArray(err)) {\r\n        err.forEach((singleError) => {\r\n          dispatch(createError(singleError));\r\n        });\r\n      } else if (err.response && err.response.data) {\r\n        dispatch(createError(err.response.data.error));\r\n      } else {\r\n        dispatch(createError(err.message));\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      {!signIn && (\r\n        <form onSubmit={loginUser}>\r\n          <input\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />{\" \"}\r\n          <br />\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />{\" \"}\r\n          <br />\r\n          <button>Login</button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createError } from \"../reducers/notificationReducer\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport userService from \"../services/userServices\";\r\n\r\nfunction Register({ user }) {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      history.push(\"/\");\r\n    }\r\n  });\r\n\r\n  const registerUser = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const errors = [];\r\n      if (password !== confirmPassword) {\r\n        errors.push(\"Password Confirmation does not match!\");\r\n      }\r\n      if (errors.length !== 0) {\r\n        throw errors;\r\n      }\r\n      await userService.register({ username, password });\r\n      const response = await userService.login({ username, password });\r\n      const token = JSON.stringify(response);\r\n      window.localStorage.setItem(\"loggedUser\", token);\r\n      window.location.reload();\r\n    } catch (err) {\r\n      if (Array.isArray(err)) {\r\n        err.forEach((singleError) => dispatch(createError(singleError)));\r\n      } else if (err && err.response) {\r\n        dispatch(createError(err.response.data.error));\r\n      }\r\n      setTimeout(() => {\r\n        setErrorMsg(\"\");\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  const notificationStyle = {\r\n    display: errorMsg ? \"\" : \"none\",\r\n    border: \"solid\",\r\n    borderWidth: 3,\r\n    borderColor: errorMsg ? \"red\" : \"black\",\r\n    padding: 10,\r\n    margin: 10,\r\n  };\r\n  return (\r\n    <div>\r\n      <div style={notificationStyle}>{errorMsg}</div>\r\n      <form onSubmit={registerUser}>\r\n        <input\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />{\" \"}\r\n        <br />\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />{\" \"}\r\n        <br />\r\n        <input\r\n          type=\"password\"\r\n          value={confirmPassword}\r\n          onChange={(e) => setConfirmPassword(e.target.value)}\r\n        />{\" \"}\r\n        <br />\r\n        <button>Register</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Header from \"./components/Header\";\nimport Notification from \"./components/Notification\";\nimport Homepage from \"./components/Homepage\";\nimport SelectQuiz from \"./components/SelectQuiz\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\n\nimport userService from \"./services/userServices\";\n\nfunction App() {\n  const [user, setUser] = useState(\"\");\n  useEffect(() => {\n    const loggedUser = window.localStorage.getItem(\"loggedUser\");\n    if (loggedUser) {\n      const objWithToken = JSON.parse(loggedUser);\n      const token = objWithToken.token;\n      setUser(objWithToken.username);\n      userService.setToken(token);\n    }\n  }, [user]);\n  return (\n    <Router>\n      <Header user={user} />\n      <Notification />\n      <Switch>\n        <Route exact path=\"/quiz\">\n          <SelectQuiz user={user} />\n        </Route>\n        <Route exact path=\"/login\">\n          <Login user={user} />\n        </Route>\n        <Route exact path=\"/register\">\n          <Register user={user} />\n        </Route>\n        <Route exact path=\"/\" component={Homepage} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { createStore } from \"redux\";\r\n\r\nimport notificatioReducer from \"./reducers/notificationReducer\";\r\n\r\nconst store = createStore(notificatioReducer);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}