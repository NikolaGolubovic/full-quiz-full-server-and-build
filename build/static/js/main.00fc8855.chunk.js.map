{"version":3,"sources":["components/Header.js","components/Notification.js","components/GuestHomepage.js","services/userServices.js","components/UserHomepage.js","components/Homepage.js","components/Spinner.js","reducers/notificationReducer.js","components/Score.js","components/Quiz.js","components/SelectQuiz.js","components/Login.js","components/Register.js","components/Footer.js","App.js","store.js","index.js"],"names":["Navbar","user","className","exact","to","activeClassName","onClick","window","localStorage","clear","location","reload","Notification","dispatch","useDispatch","notifications","useSelector","state","info","map","setTimeout","type","id","key","content","errors","error","GuestHomepage","src","alt","href","token","register","newObj","a","axios","post","response","data","login","loginObj","getScoreCard","config","headers","Authorization","get","setToken","newToken","sendScore","score","scoreObj","put","UserHomepage","useState","scores","setScores","useEffect","userService","then","catch","err","console","log","maxPoints","totalPoints","totalGames","toFixed","Homepage","Spinner","initialState","createInfo","createError","getId","Math","floor","random","notificationReducer","action","concat","filter","notification","Score","history","useHistory","confirmResult","push","Quiz","mout","nums","quizCreated","questionsArr","updateQuestionsArr","loading","updateLoading","position","updatePosition","updateScore","timer","updateTimer","quizEnd","updateQuizEnd","half","updateHalf","triple","updateTriple","addresses","addressArr","fetchAddresses","arr","length","fetch","res","json","addr","results","i","category","finalQuestions","randomNums","randomItems","randomSolutions","Set","j","num","randomArr","reduce","acc","cur","solutions","forEach","question","index","correct_answer","solution","answer","incorrect_answers","incQuestion","incIndex","_","makeFinalArr","time","justNext","clearTimeout","slice","rArr","wrongSolution","iWrong","item","halfChance","disabled","ReactHtmlParser","el","obj","level","points","timeBonus","nextQuestion","SelectQuiz","helperObj","helperArr","categoriesArr","History","Geography","Film","objWithMovieCodes","objItem","arrItem","categoryNums","updateCategoryNums","objActive","updateActive","updateQuizCreated","Fragment","splice","activeClass","numOfSelected","temp","buttonText","Login","username","setUsername","password","setPassword","signIn","setSignIn","e","preventDefault","JSON","stringify","setItem","Array","isArray","singleError","message","onSubmit","value","onChange","target","Register","confirmPassword","setConfirmPassword","registerUser","Footer","App","setUser","loggedUser","getItem","objWithToken","parse","path","store","createStore","notificatioReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.00fc8855.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default function Navbar({ user }) {\r\n  const logOut = () => {\r\n    window.localStorage.clear();\r\n    window.location.reload();\r\n  };\r\n  return (\r\n    <header className=\"nav\">\r\n      <NavLink exact to=\"/\" activeClassName=\"nav-active\">\r\n        Homepage\r\n      </NavLink>\r\n      <NavLink to=\"/quiz\" activeClassName=\"nav-active\">\r\n        Play Quiz\r\n      </NavLink>\r\n      {user ? (\r\n        <div className=\"user-control\">\r\n          <div className=\"log-out\" onClick={logOut}>\r\n            Log Out\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <NavLink to=\"/register\" activeClassName=\"nav-active\">\r\n            Sign Up\r\n          </NavLink>\r\n          <NavLink to=\"/login\" activeClassName=\"nav-active\">\r\n            Sign In\r\n          </NavLink>\r\n        </>\r\n      )}\r\n    </header>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nfunction Notification() {\r\n  const dispatch = useDispatch();\r\n  const notifications = useSelector((state) => state);\r\n  return (\r\n    <div>\r\n      {notifications.info &&\r\n        notifications.info.map((info) => {\r\n          setTimeout(\r\n            () => dispatch({ type: \"REMOVE_NOTI\", id: info.id }),\r\n            4000\r\n          );\r\n          return (\r\n            <div className=\"info-notification\" key={info.id}>\r\n              <p>{info.content}</p>\r\n              <button\r\n                onClick={() => dispatch({ type: \"REMOVE_NOTI\", id: info.id })}\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          );\r\n        })}\r\n      {notifications.errors &&\r\n        notifications.errors.map((error) => {\r\n          setTimeout(\r\n            () => dispatch({ type: \"REMOVE_ERROR\", id: error.id }),\r\n            4000\r\n          );\r\n          return (\r\n            <div className=\"error-notification\" key={error.id}>\r\n              <p>{error.content}</p>\r\n              <button\r\n                onClick={() => dispatch({ type: \"REMOVE_ERROR\", id: error.id })}\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\n\r\nfunction GuestHomepage() {\r\n  return (\r\n    <div className=\"guest-homepage-container\">\r\n      <h2>Hello Guest</h2>\r\n      <p>Wellcome to Trivia Quiz</p>\r\n      <div className=\"quiz-imgs\">\r\n        <img src=\"/css/geo1.png\" alt=\"\" />\r\n        <img src=\"/css/geo2.png\" alt=\"\" />\r\n        <img src=\"/css/history1.jpg\" alt=\"\" />\r\n        <img src=\"/css/history2.jpg\" alt=\"\" />\r\n        <img src=\"/css/movie1.png\" alt=\"\" />\r\n        <img src=\"/css/movie2.jpg\" alt=\"\" />\r\n        <img src=\"/css/science1.png\" alt=\"\" />\r\n        <img src=\"/css/science2.jpg\" alt=\"\" />\r\n        <img src=\"/css/sport1.png\" alt=\"\" />\r\n        <img src=\"/css/sport2.png\" alt=\"\" />\r\n      </div>\r\n      <div className=\"guest-directions\">\r\n        <p>\r\n          If you want better experience, to compare your self with other, you\r\n          need to <a href=\"/register\">Sign up</a>\r\n        </p>\r\n        <p>Or you can just play</p>\r\n        <a className=\"guest-play-quiz\" href=\"/quiz\">\r\n          Play Quiz\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GuestHomepage;\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = \"/api/users\";\r\n\r\nlet token = null;\r\n\r\nconst setToken = (newToken) => {\r\n  token = `bearer ${newToken}`;\r\n};\r\n\r\nconst register = async (newObj) => {\r\n  try {\r\n    const response = await axios.post(baseUrl, newObj);\r\n    return response.data;\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n\r\nconst login = async (loginObj) => {\r\n  const response = await axios.post(\"/api/login\", loginObj);\r\n  return response.data;\r\n};\r\n\r\nconst getScoreCard = async () => {\r\n  const config = { headers: { Authorization: token } };\r\n  const response = await axios.get(`${baseUrl}/scorecard`, config);\r\n  return response.data;\r\n};\r\n\r\nconst sendScore = async (score) => {\r\n  const scoreObj = { score };\r\n  const config = { headers: { Authorization: token } };\r\n  const response = await axios.put(\"/score\", scoreObj, config);\r\n  return response.data;\r\n};\r\n\r\nexport default {\r\n  setToken,\r\n  register,\r\n  login,\r\n  sendScore,\r\n  getScoreCard,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport userService from \"../services/userServices\";\r\n\r\nfunction UserHomepage({ user }) {\r\n  const [scores, setScores] = useState({});\r\n  useEffect(() => {\r\n    userService\r\n      .getScoreCard()\r\n      .then((data) => setScores(data))\r\n      .catch((err) => console.log(\"err\", err.response.data));\r\n  }, []);\r\n  return (\r\n    <div className=\"user-score\">\r\n      <h1>Hello {user}</h1>\r\n      <p>Your best score is {scores.maxPoints}</p>\r\n      <p>\r\n        Your average score per game is{\" \"}\r\n        {(scores.totalPoints / scores.totalGames).toFixed(0)}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserHomepage;\r\n","import React from \"react\";\r\n\r\nimport GuestHomepage from \"./GuestHomepage\";\r\nimport UserHomepage from \"./UserHomepage\";\r\n\r\nfunction Homepage({ user }) {\r\n  return <div>{user ? <UserHomepage user={user} /> : <GuestHomepage />}</div>;\r\n}\r\n\r\nexport default Homepage;\r\n","import React from \"react\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"loader-container\">\r\n      <div className=\"loader\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","const initialState = {\r\n  info: [],\r\n  errors: [],\r\n};\r\n\r\nexport const createInfo = (info) => {\r\n  return {\r\n    type: \"ADD_INFO\",\r\n    info,\r\n  };\r\n};\r\n\r\nexport const createError = (error) => {\r\n  return {\r\n    type: \"ADD_ERROR\",\r\n    error,\r\n  };\r\n};\r\n\r\nconst getId = () => Math.floor(Math.random() * 100000);\r\n\r\nconst notificationReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_INFO\":\r\n      return {\r\n        ...state,\r\n        info: state.info.concat({\r\n          content: action.info,\r\n          id: `info-${getId()}`,\r\n        }),\r\n      };\r\n    case \"ADD_ERROR\":\r\n      console.log(action);\r\n      return {\r\n        ...state,\r\n        errors: state.errors.concat({\r\n          content: action.error,\r\n          id: `error-${getId()}`,\r\n        }),\r\n      };\r\n    case \"REMOVE_NOTI\":\r\n      return {\r\n        ...state,\r\n        info: state.info.filter(\r\n          (notification) => notification.id !== action.id\r\n        ),\r\n      };\r\n    case \"REMOVE_ERROR\":\r\n      return {\r\n        ...state,\r\n        errors: state.errors.filter(\r\n          (notification) => notification.id !== action.id\r\n        ),\r\n      };\r\n    case \"RESET_NOTIFICATIONS\":\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default notificationReducer;\r\n","import React from \"react\";\r\nimport { createInfo, createError } from \"../reducers/notificationReducer\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport userService from \"../services/userServices\";\r\n\r\nfunction Score({ score, user }) {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const confirmResult = async () => {\r\n    try {\r\n      await userService.sendScore(score);\r\n      dispatch(createInfo(\"Your score is successfully updated\"));\r\n      history.push(\"/\");\r\n    } catch (err) {\r\n      createError(\"Something went wrong\");\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <h2>You made: {score} </h2>\r\n      {user && (\r\n        <button className=\"confirm-score\" onClick={confirmResult}>\r\n          Confirm Your result\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Score;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport Spinner from \"./Spinner\";\r\nimport Score from \"./Score\";\r\n\r\nfunction Quiz({ nums, quizCreated, user }) {\r\n  const [questionsArr, updateQuestionsArr] = useState([]);\r\n  const [loading, updateLoading] = useState(true);\r\n  const [position, updatePosition] = useState(0); // index for questionsArr\r\n  const [score, updateScore] = useState(0);\r\n  const [timer, updateTimer] = useState(12);\r\n  const [quizEnd, updateQuizEnd] = useState(false);\r\n  const [half, updateHalf] = useState(false);\r\n  const [triple, updateTriple] = useState(0);\r\n  useEffect(() => {\r\n    let addresses = [];\r\n    let addressArr = [];\r\n    // napraviti adrese od arraya iz propsa\r\n    function makeAddresses(arr) {\r\n      addresses = arr.map(\r\n        (category) =>\r\n          `https://opentdb.com/api.php?amount=10&category=${category}&type=multiple`\r\n      );\r\n    }\r\n    makeAddresses(nums);\r\n    // napraviti promise iz addresses arraya\r\n    async function fetchAddresses(arr) {\r\n      if (arr.length < 1) {\r\n        let res = await fetch(\r\n          \"https://opentdb.com/api.php?amount=10&type=multiple\"\r\n        );\r\n        let addr = await res.json();\r\n        addressArr.push(addr.results);\r\n      } else if (arr.length === 1) {\r\n        let res = await fetch(\r\n          `https://opentdb.com/api.php?amount=10&category=${nums[0]}&type=multiple`\r\n        );\r\n        let addr = await res.json();\r\n        addressArr.push(addr.results);\r\n      } else if (arr.length > 1) {\r\n        for (let i = 0; i < arr.length; i++) {\r\n          let res = await fetch(arr[i]);\r\n          let addr = await res.json();\r\n          addressArr.push(addr.results);\r\n        }\r\n      }\r\n    }\r\n\r\n    // choose ten questions\r\n    let finalQuestions = [];\r\n    async function makeFinalArr() {\r\n      await fetchAddresses(addresses);\r\n      if (addressArr.length === 10) {\r\n        updateQuestionsArr(addressArr);\r\n        return;\r\n      }\r\n      let randomArr = [];\r\n      function randomNums(num) {\r\n        while (randomArr.length < 10) {\r\n          randomArr.push(Math.floor(Math.random() * num));\r\n          randomArr = [...new Set(randomArr)];\r\n        }\r\n      }\r\n      addressArr = addressArr.reduce((acc, cur) => acc.concat(cur));\r\n      randomNums(addressArr.length);\r\n      for (let i = 0; i < randomArr.length; i++) {\r\n        finalQuestions.push(addressArr[randomArr[i]]);\r\n      }\r\n      let solutions = []; // ici ce opcije sa prvom elementom kao tacnim odgovorom\r\n      finalQuestions.forEach((question, index) => {\r\n        solutions[index] = [];\r\n        if (question.correct_answer) {\r\n          solutions[index].push({\r\n            solution: question[\"correct_answer\"],\r\n            answer: true,\r\n          });\r\n          delete question.correct_answer;\r\n        }\r\n        if (question.incorrect_answers) {\r\n          question.incorrect_answers.map((incQuestion, incIndex) => {\r\n            return solutions[index].push({\r\n              solution: incQuestion,\r\n              answer: false,\r\n            });\r\n          });\r\n          delete question.incorrect_answers;\r\n        }\r\n      });\r\n      function randomItems(arr) {\r\n        // parametar arr sa tacnim odgovor elementom na uvek istom mestu\r\n        let randomSolutions = [];\r\n        for (var i = 0; i < arr.length; i++) {\r\n          let random = [];\r\n          while (random.length < 4) {\r\n            random.push(Math.floor(Math.random() * 4));\r\n            random = [...new Set(random)];\r\n          }\r\n\r\n          randomSolutions[i] = [];\r\n          for (var j = 0; j < 4; j++) {\r\n            randomSolutions[i][random[j]] = arr[i][j];\r\n          }\r\n        }\r\n        return randomSolutions; // arr sa random elementima\r\n      }\r\n      solutions = randomItems(solutions);\r\n\r\n      finalQuestions.forEach(\r\n        (_, index) => (finalQuestions[index][\"solutions\"] = solutions[index])\r\n      );\r\n      await updateQuestionsArr(finalQuestions);\r\n      updateLoading(false);\r\n    }\r\n    if (quizCreated) {\r\n      makeFinalArr();\r\n    }\r\n  }, [quizCreated, nums]);\r\n  // use real dependec, FIX FOR ERROR\r\n  // However, we only truly needed count to transform it into count + 1 and “send it back” to React.\r\n  // But React already knows the current count. All we needed to tell React is to increment the state — whatever it is right now.\r\n  // https://overreacted.io/a-complete-guide-to-useeffect/?fbclid=IwAR2J2V2v0IurIHL25lxmX0Prg7OicvGWe74mhlcL4P0fBs1cLha6ETY_cJ0\r\n  let mout; // set timeout variable\r\n  const time = () => {\r\n    if (timer === 0) {\r\n      updateTimer(12);\r\n      if (position === 9) {\r\n        updateQuizEnd(true);\r\n        return;\r\n      }\r\n      updatePosition(position + 1);\r\n      updateHalf(false);\r\n      return;\r\n    } else {\r\n      mout = setTimeout(() => {\r\n        updateTimer(timer - 1);\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  function nextQuestion(obj, level) {\r\n    let points = 1;\r\n    let timeBonus = 1;\r\n    if (obj[\"answer\"]) {\r\n      if (level === \"hard\") {\r\n        points = 5;\r\n      } else if (level === \"medium\") {\r\n        points = 3;\r\n      }\r\n      if (timer > 8) {\r\n        timeBonus = 5;\r\n      } else if (timer >= 4 && timer <= 8) {\r\n        timeBonus = 3;\r\n      }\r\n      updateScore(score + points + timeBonus);\r\n    } else {\r\n      points = score + -3 >= 0 ? score - 3 : 0;\r\n      updateScore(points);\r\n    }\r\n    clearTimeout(mout);\r\n    if (position + 1 === 10) {\r\n      updateQuizEnd(true);\r\n      return;\r\n    }\r\n    updatePosition(position + 1);\r\n    updateHalf(false);\r\n    updateTimer(12);\r\n  }\r\n\r\n  function halfChance(arr) {\r\n    let rArr = [];\r\n    let wrongSolution = [];\r\n    let iWrong = 0;\r\n    while (rArr.length < 2) {\r\n      rArr.push(Math.floor(Math.random() * 3));\r\n      rArr = [...new Set(rArr)];\r\n    }\r\n    arr.forEach((item) => {\r\n      if (!item.answer) {\r\n        item.half = true;\r\n        wrongSolution.push(item);\r\n      }\r\n    });\r\n    for (var i = 0; i <= 2; i++) {\r\n      if (i !== rArr[0] && i !== rArr[1]) {\r\n        iWrong = i;\r\n        break;\r\n      }\r\n    }\r\n    wrongSolution[iWrong].half = false;\r\n    clearTimeout(mout);\r\n    updateHalf(true);\r\n    updateTriple(triple + 1);\r\n  }\r\n\r\n  function justNext() {\r\n    if (position + 1 === 10) {\r\n      updateQuizEnd(true);\r\n      return;\r\n    }\r\n    clearTimeout(mout);\r\n    updatePosition(position + 1);\r\n    updateHalf(false);\r\n    updateTimer(12);\r\n  }\r\n\r\n  if (loading) return <Spinner />;\r\n  return (\r\n    <div className=\"quiz-main-container\">\r\n      <div className={!quizEnd ? \"\" : \"blank\"}>\r\n        {questionsArr.map((question, index) => {\r\n          if (position === index) {\r\n            return (\r\n              <ul className=\"quiz-container\" key={question.question.slice(10)}>\r\n                <li className=\"score\" key={index} onClick={time()}>\r\n                  <small>Time:</small> {timer} <small>Points:</small> {score}{\" \"}\r\n                  <small>Question Number:</small> {index + 1}\r\n                </li>\r\n                <button\r\n                  className={!half ? \"fifty-fifty\" : \"fifty-used\"}\r\n                  onClick={() => halfChance(question.solutions)}\r\n                  disabled={half || triple >= 3}\r\n                >\r\n                  50:50\r\n                </button>\r\n                <li className=\"question-title\" key={question.category + index}>\r\n                  {ReactHtmlParser(question.question)}\r\n                </li>\r\n                {question.solutions.map((el) => {\r\n                  return (\r\n                    <button\r\n                      className=\"solution\"\r\n                      key={el.solution}\r\n                      onClick={() => nextQuestion(el, question[\"difficulty\"])}\r\n                      disabled={el.half}\r\n                    >\r\n                      <span className={el.half ? \"half\" : \"\"}>\r\n                        {ReactHtmlParser(el.solution)}\r\n                      </span>\r\n                    </button>\r\n                  );\r\n                })}\r\n                <button className=\"next-q\" onClick={justNext}>\r\n                  Next Question\r\n                </button>\r\n              </ul>\r\n            );\r\n          }\r\n        })}\r\n      </div>\r\n      <div className={quizEnd ? \"score\" : \"blank\"}>\r\n        <Score score={score} user={user} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quiz;\r\n","import React, { useState } from \"react\";\r\nimport Quiz from \"./Quiz\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction SelectQuiz({ user }) {\r\n  const history = useHistory();\r\n  let helperObj = {}; // to work with objActive\r\n  let helperArr = []; // for pushin category Nums\r\n  const categoriesArr = [\r\n    { \"General Knowledge\": 9 },\r\n    { History: 23 },\r\n    { Geography: 22 },\r\n    { Film: 11 },\r\n    { \"Science & Nature\": 17 },\r\n  ];\r\n  let objWithMovieCodes = {};\r\n  categoriesArr.forEach((objItem) => {\r\n    for (let key in objItem) {\r\n      objWithMovieCodes[key] = objItem[key];\r\n    }\r\n  });\r\n  categoriesArr.forEach((arrItem, index) => {\r\n    for (let key in arrItem) {\r\n      helperObj[key] = false;\r\n    }\r\n  });\r\n  const [categoryNums, updateCategoryNums] = useState([]);\r\n  const [objActive, updateActive] = useState(helperObj);\r\n  const [quizCreated, updateQuizCreated] = useState(false);\r\n\r\n  function activeClass(key) {\r\n    helperObj = objActive;\r\n    if (helperObj[key]) {\r\n      helperObj[key] = false;\r\n      updateActive(helperObj);\r\n    } else {\r\n      helperObj[key] = true;\r\n      updateActive(helperObj);\r\n    }\r\n    helperArr = categoryNums;\r\n    for (var i = 0; i < helperArr.length; i++) {\r\n      if (helperArr[i] === objWithMovieCodes[key]) {\r\n        helperArr.splice(i, 1);\r\n        updateCategoryNums(helperArr);\r\n        history.push(\"/quiz\");\r\n        return;\r\n      }\r\n    }\r\n    helperArr.push(objWithMovieCodes[key]);\r\n    updateCategoryNums(helperArr);\r\n    history.push(\"/quiz\");\r\n  }\r\n  function buttonText(obj) {\r\n    // obj param is objActive\r\n    let numOfSelected = 0;\r\n    let temp = \"\";\r\n    for (let key in obj) {\r\n      if (obj[key]) {\r\n        numOfSelected += 1;\r\n      }\r\n      if (numOfSelected === 1 && obj[key]) {\r\n        // mora obj[key] inace ce da saltuje sve objekte otkad detektuje numOfSelected\r\n        temp = key;\r\n      }\r\n    }\r\n    return numOfSelected === 1\r\n      ? `Create ${temp}'s Quiz`\r\n      : numOfSelected > 1\r\n      ? \"Create Quiz with choosen areas\"\r\n      : \"Create highly random Quiz\";\r\n  }\r\n\r\n  function createQuiz() {\r\n    updateQuizCreated(true);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={!quizCreated ? \"selection\" : \"blank\"}>\r\n        <h3>Choose your Categories</h3>\r\n        <ul className=\"categories\">\r\n          {categoriesArr.map((category) => {\r\n            for (let key in category) {\r\n              return (\r\n                <li\r\n                  key={category[key]}\r\n                  className={\r\n                    objActive && objActive[key] ? \"category active\" : \"category\"\r\n                  }\r\n                  onClick={() => activeClass(key)}\r\n                >\r\n                  {key}\r\n                </li>\r\n              );\r\n            }\r\n          })}\r\n        </ul>\r\n        <button className=\"btn-create-quiz\" onClick={createQuiz}>\r\n          {buttonText(objActive)}\r\n        </button>\r\n      </div>\r\n\r\n      <div className={quizCreated ? \"quiz\" : \"blank\"}>\r\n        <Quiz nums={categoryNums} quizCreated={quizCreated} user={user} />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default SelectQuiz;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport userService from \"../services/userServices\";\r\nimport { createInfo, createError } from \"../reducers/notificationReducer\";\r\n\r\nfunction Login({ user }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (user) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [user, history]);\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [signIn, setSignIn] = useState(false);\r\n\r\n  async function loginUser(e) {\r\n    e.preventDefault();\r\n    const errors = [];\r\n    try {\r\n      if (!username) {\r\n        errors.push(\"Username is missing\");\r\n      }\r\n      if (!password) {\r\n        errors.push(\"Password is missing\");\r\n      }\r\n      if (errors.length !== 0) {\r\n        throw errors;\r\n      }\r\n      const response = await userService.login({ username, password });\r\n      const token = JSON.stringify(response);\r\n      window.localStorage.setItem(\"loggedUser\", token);\r\n      dispatch(createInfo(`Hello ${username}`));\r\n      setTimeout(() => window.location.reload(), 1500);\r\n      setSignIn(true);\r\n    } catch (err) {\r\n      if (Array.isArray(err)) {\r\n        err.forEach((singleError) => {\r\n          dispatch(createError(singleError));\r\n        });\r\n      } else if (err.response && err.response.data) {\r\n        dispatch(createError(err.response.data.error));\r\n      } else {\r\n        dispatch(createError(err.message));\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"credentials-container\">\r\n      {!signIn && (\r\n        <form onSubmit={loginUser}>\r\n          <label>Username:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />{\" \"}\r\n          <br />\r\n          <label>Password: </label>\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />{\" \"}\r\n          <br />\r\n          <button>Login</button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createError } from \"../reducers/notificationReducer\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport userService from \"../services/userServices\";\r\n\r\nfunction Register({ user }) {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      history.push(\"/\");\r\n    }\r\n  });\r\n\r\n  const registerUser = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const errors = [];\r\n      if (password !== confirmPassword) {\r\n        errors.push(\"Password Confirmation does not match!\");\r\n      }\r\n      if (errors.length !== 0) {\r\n        throw errors;\r\n      }\r\n      await userService.register({ username, password });\r\n      const response = await userService.login({ username, password });\r\n      const token = JSON.stringify(response);\r\n      window.localStorage.setItem(\"loggedUser\", token);\r\n      window.location.reload();\r\n    } catch (err) {\r\n      if (Array.isArray(err)) {\r\n        err.forEach((singleError) => dispatch(createError(singleError)));\r\n      } else if (err && err.response) {\r\n        dispatch(createError(err.response.data.error));\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"credentials-container\">\r\n      <form onSubmit={registerUser}>\r\n        <small>Username</small>\r\n        <input\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />{\" \"}\r\n        <br />\r\n        <small>Password</small>\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />{\" \"}\r\n        <br />\r\n        <small>Confirm Password</small>\r\n        <input\r\n          type=\"password\"\r\n          value={confirmPassword}\r\n          onChange={(e) => setConfirmPassword(e.target.value)}\r\n        />{\" \"}\r\n        <br />\r\n        <button>Register</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      &copy;<small>Pale blue Dot</small>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Header from \"./components/Header\";\nimport Notification from \"./components/Notification\";\nimport Homepage from \"./components/Homepage\";\nimport SelectQuiz from \"./components/SelectQuiz\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Footer from \"./components/Footer\";\n\nimport userService from \"./services/userServices\";\n\nfunction App() {\n  const [user, setUser] = useState(\"\");\n  useEffect(() => {\n    const loggedUser = window.localStorage.getItem(\"loggedUser\");\n    if (loggedUser) {\n      const objWithToken = JSON.parse(loggedUser);\n      const token = objWithToken.token;\n      setUser(objWithToken.username);\n      userService.setToken(token);\n    }\n  }, [user]);\n  return (\n    <Router>\n      <Header user={user} />\n      <Notification />\n      <div className=\"container\">\n        <Switch>\n          <Route exact path=\"/quiz\">\n            <SelectQuiz user={user} />\n          </Route>\n          <Route exact path=\"/login\">\n            <Login user={user} />\n          </Route>\n          <Route exact path=\"/register\">\n            <Register user={user} />\n          </Route>\n          <Route exact path=\"/\">\n            <Homepage user={user} />\n          </Route>\n        </Switch>\n      </div>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","import { createStore } from \"redux\";\r\n\r\nimport notificatioReducer from \"./reducers/notificationReducer\";\r\n\r\nconst store = createStore(notificatioReducer);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}